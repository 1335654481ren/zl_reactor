# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#SUBDIRS= thread utility task_service log net statistic

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = zlreactor
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libzlreactor_a_AR = $(AR) $(ARFLAGS)
libzlreactor_a_DEPENDENCIES =
am_libzlreactor_a_OBJECTS = libzlreactor_a-Base64.$(OBJEXT) \
	libzlreactor_a-ByteArray.$(OBJEXT) \
	libzlreactor_a-Date.$(OBJEXT) \
	libzlreactor_a-DateTimeUtil.$(OBJEXT) \
	libzlreactor_a-FileUtil.$(OBJEXT) libzlreactor_a-MD5.$(OBJEXT) \
	libzlreactor_a-StringHash.$(OBJEXT) \
	libzlreactor_a-Timestamp.$(OBJEXT) \
	libzlreactor_a-ZLog.$(OBJEXT) libzlreactor_a-Thread.$(OBJEXT) \
	libzlreactor_a-ThreadGroup.$(OBJEXT) \
	libzlreactor_a-ThreadPool.$(OBJEXT) \
	libzlreactor_a-Timer.$(OBJEXT) \
	libzlreactor_a-TimerQueue.$(OBJEXT) \
	libzlreactor_a-NetUtil.$(OBJEXT) \
	libzlreactor_a-SocketUtil.$(OBJEXT) \
	libzlreactor_a-InetAddress.$(OBJEXT)
libzlreactor_a_OBJECTS = $(am_libzlreactor_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libzlreactor_a_SOURCES)
DIST_SOURCES = $(libzlreactor_a_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = -Wall -g -O2 -fPIC
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LIBRARIES = libzlreactor.a
libzlreactor_a_LIBFLAGS = 
libzlreactor_a_LIBADD = 
INCLUDES = -I../
libzlreactor_a_CPPFLAGS = -std=c++0x
#libzlreactor_a_LDFLAGS = -lpthread	
libzlreactor_a_SOURCES = \
					 base/Base64.cpp \
					 base/ByteArray.cpp \
					 base/Date.cpp \
					 base/DateTimeUtil.cpp \
					 base/FileUtil.cpp \
					 base/MD5.cpp \
					 base/StringHash.cpp \
					 base/Timestamp.cpp \
					 base/ZLog.cpp \
					 thread/Thread.cpp \
					 thread/ThreadGroup.cpp \
					 thread/ThreadPool.cpp \
					 thread/Timer.cpp \
					 thread/TimerQueue.cpp \
					 net/NetUtil.cpp \
					 net/SocketUtil.cpp \
					 net/InetAddress.cpp 

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu zlreactor/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu zlreactor/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(libdir)" && rm -f $$files

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libzlreactor.a: $(libzlreactor_a_OBJECTS) $(libzlreactor_a_DEPENDENCIES) 
	-rm -f libzlreactor.a
	$(libzlreactor_a_AR) libzlreactor.a $(libzlreactor_a_OBJECTS) $(libzlreactor_a_LIBADD)
	$(RANLIB) libzlreactor.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-Base64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-ByteArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-Date.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-DateTimeUtil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-FileUtil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-InetAddress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-MD5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-NetUtil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-SocketUtil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-StringHash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-Thread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-ThreadGroup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-ThreadPool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-Timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-TimerQueue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-Timestamp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzlreactor_a-ZLog.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libzlreactor_a-Base64.o: base/Base64.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-Base64.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-Base64.Tpo -c -o libzlreactor_a-Base64.o `test -f 'base/Base64.cpp' || echo '$(srcdir)/'`base/Base64.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-Base64.Tpo $(DEPDIR)/libzlreactor_a-Base64.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Base64.cpp' object='libzlreactor_a-Base64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-Base64.o `test -f 'base/Base64.cpp' || echo '$(srcdir)/'`base/Base64.cpp

libzlreactor_a-Base64.obj: base/Base64.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-Base64.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-Base64.Tpo -c -o libzlreactor_a-Base64.obj `if test -f 'base/Base64.cpp'; then $(CYGPATH_W) 'base/Base64.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Base64.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-Base64.Tpo $(DEPDIR)/libzlreactor_a-Base64.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Base64.cpp' object='libzlreactor_a-Base64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-Base64.obj `if test -f 'base/Base64.cpp'; then $(CYGPATH_W) 'base/Base64.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Base64.cpp'; fi`

libzlreactor_a-ByteArray.o: base/ByteArray.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-ByteArray.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-ByteArray.Tpo -c -o libzlreactor_a-ByteArray.o `test -f 'base/ByteArray.cpp' || echo '$(srcdir)/'`base/ByteArray.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-ByteArray.Tpo $(DEPDIR)/libzlreactor_a-ByteArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/ByteArray.cpp' object='libzlreactor_a-ByteArray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-ByteArray.o `test -f 'base/ByteArray.cpp' || echo '$(srcdir)/'`base/ByteArray.cpp

libzlreactor_a-ByteArray.obj: base/ByteArray.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-ByteArray.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-ByteArray.Tpo -c -o libzlreactor_a-ByteArray.obj `if test -f 'base/ByteArray.cpp'; then $(CYGPATH_W) 'base/ByteArray.cpp'; else $(CYGPATH_W) '$(srcdir)/base/ByteArray.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-ByteArray.Tpo $(DEPDIR)/libzlreactor_a-ByteArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/ByteArray.cpp' object='libzlreactor_a-ByteArray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-ByteArray.obj `if test -f 'base/ByteArray.cpp'; then $(CYGPATH_W) 'base/ByteArray.cpp'; else $(CYGPATH_W) '$(srcdir)/base/ByteArray.cpp'; fi`

libzlreactor_a-Date.o: base/Date.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-Date.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-Date.Tpo -c -o libzlreactor_a-Date.o `test -f 'base/Date.cpp' || echo '$(srcdir)/'`base/Date.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-Date.Tpo $(DEPDIR)/libzlreactor_a-Date.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Date.cpp' object='libzlreactor_a-Date.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-Date.o `test -f 'base/Date.cpp' || echo '$(srcdir)/'`base/Date.cpp

libzlreactor_a-Date.obj: base/Date.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-Date.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-Date.Tpo -c -o libzlreactor_a-Date.obj `if test -f 'base/Date.cpp'; then $(CYGPATH_W) 'base/Date.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Date.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-Date.Tpo $(DEPDIR)/libzlreactor_a-Date.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Date.cpp' object='libzlreactor_a-Date.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-Date.obj `if test -f 'base/Date.cpp'; then $(CYGPATH_W) 'base/Date.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Date.cpp'; fi`

libzlreactor_a-DateTimeUtil.o: base/DateTimeUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-DateTimeUtil.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-DateTimeUtil.Tpo -c -o libzlreactor_a-DateTimeUtil.o `test -f 'base/DateTimeUtil.cpp' || echo '$(srcdir)/'`base/DateTimeUtil.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-DateTimeUtil.Tpo $(DEPDIR)/libzlreactor_a-DateTimeUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/DateTimeUtil.cpp' object='libzlreactor_a-DateTimeUtil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-DateTimeUtil.o `test -f 'base/DateTimeUtil.cpp' || echo '$(srcdir)/'`base/DateTimeUtil.cpp

libzlreactor_a-DateTimeUtil.obj: base/DateTimeUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-DateTimeUtil.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-DateTimeUtil.Tpo -c -o libzlreactor_a-DateTimeUtil.obj `if test -f 'base/DateTimeUtil.cpp'; then $(CYGPATH_W) 'base/DateTimeUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/base/DateTimeUtil.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-DateTimeUtil.Tpo $(DEPDIR)/libzlreactor_a-DateTimeUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/DateTimeUtil.cpp' object='libzlreactor_a-DateTimeUtil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-DateTimeUtil.obj `if test -f 'base/DateTimeUtil.cpp'; then $(CYGPATH_W) 'base/DateTimeUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/base/DateTimeUtil.cpp'; fi`

libzlreactor_a-FileUtil.o: base/FileUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-FileUtil.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-FileUtil.Tpo -c -o libzlreactor_a-FileUtil.o `test -f 'base/FileUtil.cpp' || echo '$(srcdir)/'`base/FileUtil.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-FileUtil.Tpo $(DEPDIR)/libzlreactor_a-FileUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/FileUtil.cpp' object='libzlreactor_a-FileUtil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-FileUtil.o `test -f 'base/FileUtil.cpp' || echo '$(srcdir)/'`base/FileUtil.cpp

libzlreactor_a-FileUtil.obj: base/FileUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-FileUtil.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-FileUtil.Tpo -c -o libzlreactor_a-FileUtil.obj `if test -f 'base/FileUtil.cpp'; then $(CYGPATH_W) 'base/FileUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/base/FileUtil.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-FileUtil.Tpo $(DEPDIR)/libzlreactor_a-FileUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/FileUtil.cpp' object='libzlreactor_a-FileUtil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-FileUtil.obj `if test -f 'base/FileUtil.cpp'; then $(CYGPATH_W) 'base/FileUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/base/FileUtil.cpp'; fi`

libzlreactor_a-MD5.o: base/MD5.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-MD5.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-MD5.Tpo -c -o libzlreactor_a-MD5.o `test -f 'base/MD5.cpp' || echo '$(srcdir)/'`base/MD5.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-MD5.Tpo $(DEPDIR)/libzlreactor_a-MD5.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/MD5.cpp' object='libzlreactor_a-MD5.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-MD5.o `test -f 'base/MD5.cpp' || echo '$(srcdir)/'`base/MD5.cpp

libzlreactor_a-MD5.obj: base/MD5.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-MD5.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-MD5.Tpo -c -o libzlreactor_a-MD5.obj `if test -f 'base/MD5.cpp'; then $(CYGPATH_W) 'base/MD5.cpp'; else $(CYGPATH_W) '$(srcdir)/base/MD5.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-MD5.Tpo $(DEPDIR)/libzlreactor_a-MD5.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/MD5.cpp' object='libzlreactor_a-MD5.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-MD5.obj `if test -f 'base/MD5.cpp'; then $(CYGPATH_W) 'base/MD5.cpp'; else $(CYGPATH_W) '$(srcdir)/base/MD5.cpp'; fi`

libzlreactor_a-StringHash.o: base/StringHash.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-StringHash.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-StringHash.Tpo -c -o libzlreactor_a-StringHash.o `test -f 'base/StringHash.cpp' || echo '$(srcdir)/'`base/StringHash.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-StringHash.Tpo $(DEPDIR)/libzlreactor_a-StringHash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/StringHash.cpp' object='libzlreactor_a-StringHash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-StringHash.o `test -f 'base/StringHash.cpp' || echo '$(srcdir)/'`base/StringHash.cpp

libzlreactor_a-StringHash.obj: base/StringHash.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-StringHash.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-StringHash.Tpo -c -o libzlreactor_a-StringHash.obj `if test -f 'base/StringHash.cpp'; then $(CYGPATH_W) 'base/StringHash.cpp'; else $(CYGPATH_W) '$(srcdir)/base/StringHash.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-StringHash.Tpo $(DEPDIR)/libzlreactor_a-StringHash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/StringHash.cpp' object='libzlreactor_a-StringHash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-StringHash.obj `if test -f 'base/StringHash.cpp'; then $(CYGPATH_W) 'base/StringHash.cpp'; else $(CYGPATH_W) '$(srcdir)/base/StringHash.cpp'; fi`

libzlreactor_a-Timestamp.o: base/Timestamp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-Timestamp.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-Timestamp.Tpo -c -o libzlreactor_a-Timestamp.o `test -f 'base/Timestamp.cpp' || echo '$(srcdir)/'`base/Timestamp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-Timestamp.Tpo $(DEPDIR)/libzlreactor_a-Timestamp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Timestamp.cpp' object='libzlreactor_a-Timestamp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-Timestamp.o `test -f 'base/Timestamp.cpp' || echo '$(srcdir)/'`base/Timestamp.cpp

libzlreactor_a-Timestamp.obj: base/Timestamp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-Timestamp.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-Timestamp.Tpo -c -o libzlreactor_a-Timestamp.obj `if test -f 'base/Timestamp.cpp'; then $(CYGPATH_W) 'base/Timestamp.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Timestamp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-Timestamp.Tpo $(DEPDIR)/libzlreactor_a-Timestamp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Timestamp.cpp' object='libzlreactor_a-Timestamp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-Timestamp.obj `if test -f 'base/Timestamp.cpp'; then $(CYGPATH_W) 'base/Timestamp.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Timestamp.cpp'; fi`

libzlreactor_a-ZLog.o: base/ZLog.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-ZLog.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-ZLog.Tpo -c -o libzlreactor_a-ZLog.o `test -f 'base/ZLog.cpp' || echo '$(srcdir)/'`base/ZLog.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-ZLog.Tpo $(DEPDIR)/libzlreactor_a-ZLog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/ZLog.cpp' object='libzlreactor_a-ZLog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-ZLog.o `test -f 'base/ZLog.cpp' || echo '$(srcdir)/'`base/ZLog.cpp

libzlreactor_a-ZLog.obj: base/ZLog.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-ZLog.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-ZLog.Tpo -c -o libzlreactor_a-ZLog.obj `if test -f 'base/ZLog.cpp'; then $(CYGPATH_W) 'base/ZLog.cpp'; else $(CYGPATH_W) '$(srcdir)/base/ZLog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-ZLog.Tpo $(DEPDIR)/libzlreactor_a-ZLog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/ZLog.cpp' object='libzlreactor_a-ZLog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-ZLog.obj `if test -f 'base/ZLog.cpp'; then $(CYGPATH_W) 'base/ZLog.cpp'; else $(CYGPATH_W) '$(srcdir)/base/ZLog.cpp'; fi`

libzlreactor_a-Thread.o: thread/Thread.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-Thread.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-Thread.Tpo -c -o libzlreactor_a-Thread.o `test -f 'thread/Thread.cpp' || echo '$(srcdir)/'`thread/Thread.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-Thread.Tpo $(DEPDIR)/libzlreactor_a-Thread.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread/Thread.cpp' object='libzlreactor_a-Thread.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-Thread.o `test -f 'thread/Thread.cpp' || echo '$(srcdir)/'`thread/Thread.cpp

libzlreactor_a-Thread.obj: thread/Thread.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-Thread.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-Thread.Tpo -c -o libzlreactor_a-Thread.obj `if test -f 'thread/Thread.cpp'; then $(CYGPATH_W) 'thread/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/thread/Thread.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-Thread.Tpo $(DEPDIR)/libzlreactor_a-Thread.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread/Thread.cpp' object='libzlreactor_a-Thread.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-Thread.obj `if test -f 'thread/Thread.cpp'; then $(CYGPATH_W) 'thread/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/thread/Thread.cpp'; fi`

libzlreactor_a-ThreadGroup.o: thread/ThreadGroup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-ThreadGroup.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-ThreadGroup.Tpo -c -o libzlreactor_a-ThreadGroup.o `test -f 'thread/ThreadGroup.cpp' || echo '$(srcdir)/'`thread/ThreadGroup.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-ThreadGroup.Tpo $(DEPDIR)/libzlreactor_a-ThreadGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread/ThreadGroup.cpp' object='libzlreactor_a-ThreadGroup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-ThreadGroup.o `test -f 'thread/ThreadGroup.cpp' || echo '$(srcdir)/'`thread/ThreadGroup.cpp

libzlreactor_a-ThreadGroup.obj: thread/ThreadGroup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-ThreadGroup.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-ThreadGroup.Tpo -c -o libzlreactor_a-ThreadGroup.obj `if test -f 'thread/ThreadGroup.cpp'; then $(CYGPATH_W) 'thread/ThreadGroup.cpp'; else $(CYGPATH_W) '$(srcdir)/thread/ThreadGroup.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-ThreadGroup.Tpo $(DEPDIR)/libzlreactor_a-ThreadGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread/ThreadGroup.cpp' object='libzlreactor_a-ThreadGroup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-ThreadGroup.obj `if test -f 'thread/ThreadGroup.cpp'; then $(CYGPATH_W) 'thread/ThreadGroup.cpp'; else $(CYGPATH_W) '$(srcdir)/thread/ThreadGroup.cpp'; fi`

libzlreactor_a-ThreadPool.o: thread/ThreadPool.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-ThreadPool.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-ThreadPool.Tpo -c -o libzlreactor_a-ThreadPool.o `test -f 'thread/ThreadPool.cpp' || echo '$(srcdir)/'`thread/ThreadPool.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-ThreadPool.Tpo $(DEPDIR)/libzlreactor_a-ThreadPool.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread/ThreadPool.cpp' object='libzlreactor_a-ThreadPool.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-ThreadPool.o `test -f 'thread/ThreadPool.cpp' || echo '$(srcdir)/'`thread/ThreadPool.cpp

libzlreactor_a-ThreadPool.obj: thread/ThreadPool.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-ThreadPool.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-ThreadPool.Tpo -c -o libzlreactor_a-ThreadPool.obj `if test -f 'thread/ThreadPool.cpp'; then $(CYGPATH_W) 'thread/ThreadPool.cpp'; else $(CYGPATH_W) '$(srcdir)/thread/ThreadPool.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-ThreadPool.Tpo $(DEPDIR)/libzlreactor_a-ThreadPool.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread/ThreadPool.cpp' object='libzlreactor_a-ThreadPool.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-ThreadPool.obj `if test -f 'thread/ThreadPool.cpp'; then $(CYGPATH_W) 'thread/ThreadPool.cpp'; else $(CYGPATH_W) '$(srcdir)/thread/ThreadPool.cpp'; fi`

libzlreactor_a-Timer.o: thread/Timer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-Timer.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-Timer.Tpo -c -o libzlreactor_a-Timer.o `test -f 'thread/Timer.cpp' || echo '$(srcdir)/'`thread/Timer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-Timer.Tpo $(DEPDIR)/libzlreactor_a-Timer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread/Timer.cpp' object='libzlreactor_a-Timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-Timer.o `test -f 'thread/Timer.cpp' || echo '$(srcdir)/'`thread/Timer.cpp

libzlreactor_a-Timer.obj: thread/Timer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-Timer.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-Timer.Tpo -c -o libzlreactor_a-Timer.obj `if test -f 'thread/Timer.cpp'; then $(CYGPATH_W) 'thread/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/thread/Timer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-Timer.Tpo $(DEPDIR)/libzlreactor_a-Timer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread/Timer.cpp' object='libzlreactor_a-Timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-Timer.obj `if test -f 'thread/Timer.cpp'; then $(CYGPATH_W) 'thread/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/thread/Timer.cpp'; fi`

libzlreactor_a-TimerQueue.o: thread/TimerQueue.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-TimerQueue.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-TimerQueue.Tpo -c -o libzlreactor_a-TimerQueue.o `test -f 'thread/TimerQueue.cpp' || echo '$(srcdir)/'`thread/TimerQueue.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-TimerQueue.Tpo $(DEPDIR)/libzlreactor_a-TimerQueue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread/TimerQueue.cpp' object='libzlreactor_a-TimerQueue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-TimerQueue.o `test -f 'thread/TimerQueue.cpp' || echo '$(srcdir)/'`thread/TimerQueue.cpp

libzlreactor_a-TimerQueue.obj: thread/TimerQueue.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-TimerQueue.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-TimerQueue.Tpo -c -o libzlreactor_a-TimerQueue.obj `if test -f 'thread/TimerQueue.cpp'; then $(CYGPATH_W) 'thread/TimerQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/thread/TimerQueue.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-TimerQueue.Tpo $(DEPDIR)/libzlreactor_a-TimerQueue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread/TimerQueue.cpp' object='libzlreactor_a-TimerQueue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-TimerQueue.obj `if test -f 'thread/TimerQueue.cpp'; then $(CYGPATH_W) 'thread/TimerQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/thread/TimerQueue.cpp'; fi`

libzlreactor_a-NetUtil.o: net/NetUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-NetUtil.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-NetUtil.Tpo -c -o libzlreactor_a-NetUtil.o `test -f 'net/NetUtil.cpp' || echo '$(srcdir)/'`net/NetUtil.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-NetUtil.Tpo $(DEPDIR)/libzlreactor_a-NetUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='net/NetUtil.cpp' object='libzlreactor_a-NetUtil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-NetUtil.o `test -f 'net/NetUtil.cpp' || echo '$(srcdir)/'`net/NetUtil.cpp

libzlreactor_a-NetUtil.obj: net/NetUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-NetUtil.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-NetUtil.Tpo -c -o libzlreactor_a-NetUtil.obj `if test -f 'net/NetUtil.cpp'; then $(CYGPATH_W) 'net/NetUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/net/NetUtil.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-NetUtil.Tpo $(DEPDIR)/libzlreactor_a-NetUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='net/NetUtil.cpp' object='libzlreactor_a-NetUtil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-NetUtil.obj `if test -f 'net/NetUtil.cpp'; then $(CYGPATH_W) 'net/NetUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/net/NetUtil.cpp'; fi`

libzlreactor_a-SocketUtil.o: net/SocketUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-SocketUtil.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-SocketUtil.Tpo -c -o libzlreactor_a-SocketUtil.o `test -f 'net/SocketUtil.cpp' || echo '$(srcdir)/'`net/SocketUtil.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-SocketUtil.Tpo $(DEPDIR)/libzlreactor_a-SocketUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='net/SocketUtil.cpp' object='libzlreactor_a-SocketUtil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-SocketUtil.o `test -f 'net/SocketUtil.cpp' || echo '$(srcdir)/'`net/SocketUtil.cpp

libzlreactor_a-SocketUtil.obj: net/SocketUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-SocketUtil.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-SocketUtil.Tpo -c -o libzlreactor_a-SocketUtil.obj `if test -f 'net/SocketUtil.cpp'; then $(CYGPATH_W) 'net/SocketUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/net/SocketUtil.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-SocketUtil.Tpo $(DEPDIR)/libzlreactor_a-SocketUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='net/SocketUtil.cpp' object='libzlreactor_a-SocketUtil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-SocketUtil.obj `if test -f 'net/SocketUtil.cpp'; then $(CYGPATH_W) 'net/SocketUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/net/SocketUtil.cpp'; fi`

libzlreactor_a-InetAddress.o: net/InetAddress.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-InetAddress.o -MD -MP -MF $(DEPDIR)/libzlreactor_a-InetAddress.Tpo -c -o libzlreactor_a-InetAddress.o `test -f 'net/InetAddress.cpp' || echo '$(srcdir)/'`net/InetAddress.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-InetAddress.Tpo $(DEPDIR)/libzlreactor_a-InetAddress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='net/InetAddress.cpp' object='libzlreactor_a-InetAddress.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-InetAddress.o `test -f 'net/InetAddress.cpp' || echo '$(srcdir)/'`net/InetAddress.cpp

libzlreactor_a-InetAddress.obj: net/InetAddress.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzlreactor_a-InetAddress.obj -MD -MP -MF $(DEPDIR)/libzlreactor_a-InetAddress.Tpo -c -o libzlreactor_a-InetAddress.obj `if test -f 'net/InetAddress.cpp'; then $(CYGPATH_W) 'net/InetAddress.cpp'; else $(CYGPATH_W) '$(srcdir)/net/InetAddress.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzlreactor_a-InetAddress.Tpo $(DEPDIR)/libzlreactor_a-InetAddress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='net/InetAddress.cpp' object='libzlreactor_a-InetAddress.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzlreactor_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzlreactor_a-InetAddress.obj `if test -f 'net/InetAddress.cpp'; then $(CYGPATH_W) 'net/InetAddress.cpp'; else $(CYGPATH_W) '$(srcdir)/net/InetAddress.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
